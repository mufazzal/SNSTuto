{
  "service": {
    "service": "FeedSNSTuto",
    "serviceObject": {
      "name": "FeedSNSTuto"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([^{}]+?)}",
      "name": "aws",
      "region": "us-east-1",
      "runtime": "nodejs12.x",
      "profile": "Mufazzal_Hussain",
      "environment": {
        "FeedSNSTopicARN": {
          "Ref": "FeedSNSTopic"
        },
        "FeedSNSDLQArn": {
          "Fn::GetAtt": [
            "FeedSNSDLQ",
            "Arn"
          ]
        }
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "logs:CreateLogGroup"
          ],
          "Resource": "arn:aws:logs:*:*:*"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "SendSNSFeedLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/FeedSNSTuto-dev-sendSNSFeed"
            }
          },
          "SubscribeSNSFeedLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/FeedSNSTuto-dev-subscribeSNSFeed"
            }
          },
          "UnSubscribeSNSFeedLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/FeedSNSTuto-dev-unSubscribeSNSFeed"
            }
          },
          "LambdaSnsSubscriberLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/FeedSNSTuto-dev-lambdaSnsSubscriber"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "FeedSNSTuto",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/FeedSNSTuto-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/FeedSNSTuto-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "FeedSNSTuto",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "SendSNSFeedLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/FeedSNSTuto/dev/1595496239332-2020-07-23T09:23:59.332Z/sendSNSFeed.zip"
              },
              "FunctionName": "FeedSNSTuto-dev-sendSNSFeed",
              "Handler": "sendSNSFeed/src/handler.sendSNSMFeed",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "SendSNSFeedIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "FeedSNSTopicARN": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"FeedSNSTopicARN\"]"
                  },
                  "FeedSNSDLQArn": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"FeedSNSDLQArn\"]"
                  }
                }
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:388412347424:layer:commonLibs:6"
              ]
            },
            "DependsOn": [
              "SendSNSFeedIamRoleLambdaExecution",
              "SendSNSFeedLogGroup"
            ]
          },
          "SendSNSFeedLambdaVersionn5gCFtv7X9kHm3TXcHoES8vvxQrpxPNfFUYwlbZ7oC8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SendSNSFeedLambdaFunction"
              },
              "CodeSha256": "pzOtrKBh7uQc4smezQErEtIGWEmhqfA7WEeO/Tac8WM="
            }
          },
          "SubscribeSNSFeedLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/FeedSNSTuto/dev/1595496239332-2020-07-23T09:23:59.332Z/subscribeSNSFeed.zip"
              },
              "FunctionName": "FeedSNSTuto-dev-subscribeSNSFeed",
              "Handler": "subscribeSNSFeed/src/handler.subscribeSNSFeed",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "SubscribeSNSFeedIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "FeedSNSTopicARN": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"FeedSNSTopicARN\"]"
                  },
                  "FeedSNSDLQArn": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"FeedSNSDLQArn\"]"
                  }
                }
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:388412347424:layer:commonLibs:6"
              ]
            },
            "DependsOn": [
              "SubscribeSNSFeedIamRoleLambdaExecution",
              "SubscribeSNSFeedLogGroup"
            ]
          },
          "SubscribeSNSFeedLambdaVersion8KoXP1AuzHNXUfrwW0q09LfmB5VQfLuV4nekgItJY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SubscribeSNSFeedLambdaFunction"
              },
              "CodeSha256": "vLgoTy7z8ppwLLYgzxxGr91pfxrMcLpoNAcMJvTMUL0="
            }
          },
          "UnSubscribeSNSFeedLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/FeedSNSTuto/dev/1595496239332-2020-07-23T09:23:59.332Z/unSubscribeSNSFeed.zip"
              },
              "FunctionName": "FeedSNSTuto-dev-unSubscribeSNSFeed",
              "Handler": "unSubscribeSNSFeed/src/handler.unSubscribeSNSFeed",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "UnSubscribeSNSFeedIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "FeedSNSTopicARN": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"FeedSNSTopicARN\"]"
                  },
                  "FeedSNSDLQArn": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"FeedSNSDLQArn\"]"
                  }
                }
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:388412347424:layer:commonLibs:6"
              ]
            },
            "DependsOn": [
              "UnSubscribeSNSFeedIamRoleLambdaExecution",
              "UnSubscribeSNSFeedLogGroup"
            ]
          },
          "UnSubscribeSNSFeedLambdaVersiongYYNpqw4OVGUbA67H8GZhAiWLleaDJ0SqpixuL2aQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UnSubscribeSNSFeedLambdaFunction"
              },
              "CodeSha256": "OzTP7PPJRSzQVhuFRRf5att+NnzUU1NorEmkLb/LP9M="
            }
          },
          "LambdaSnsSubscriberLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/FeedSNSTuto/dev/1595496239332-2020-07-23T09:23:59.332Z/lambdaSnsSubscriber.zip"
              },
              "FunctionName": "FeedSNSTuto-dev-lambdaSnsSubscriber",
              "Handler": "lambdaSnsSubscriber/src/handler.lambdaSnsSubscriber",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "FeedSNSTopicARN": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"FeedSNSTopicARN\"]"
                  },
                  "FeedSNSDLQArn": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"FeedSNSDLQArn\"]"
                  }
                }
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:388412347424:layer:commonLibs:6"
              ]
            },
            "DependsOn": [
              "LambdaSnsSubscriberLogGroup"
            ]
          },
          "LambdaSnsSubscriberLambdaVersioncSTg2s8TpuUHrupRyQ2z5GJJbN5yVBbkzajxhMpIY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LambdaSnsSubscriberLambdaFunction"
              },
              "CodeSha256": "IFkS6agoL1U70ae5kSeeZj/cdEeMvX8o0YO+Gu+/cN8="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-FeedSNSTuto",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceSendsnsfeed": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "sendSNSFeed",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSubscribe": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "subscribe",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUnsubscribe": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "unSubscribe",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodSendsnsfeedOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceSendsnsfeed"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodSubscribeOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceSubscribe"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUnsubscribeOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUnsubscribe"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodSendsnsfeedPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSendsnsfeed"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1Underscored8rcMtMXjApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SendSNSFeedLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1Underscored8rcMtMXjApiGatewayAuthorizer"
          },
          "ApiGatewayMethodSubscribePut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSubscribe"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1Underscored8rcMtMXjApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SubscribeSNSFeedLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1Underscored8rcMtMXjApiGatewayAuthorizer"
          },
          "ApiGatewayMethodUnsubscribeDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUnsubscribe"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1Underscored8rcMtMXjApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UnSubscribeSNSFeedLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1Underscored8rcMtMXjApiGatewayAuthorizer"
          },
          "1Underscored8rcMtMXjApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "AuthorizerResultTtlInSeconds": 300,
              "IdentitySource": "method.request.header.Authorization",
              "Name": "1_d8rcMtMXj",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Type": "COGNITO_USER_POOLS",
              "ProviderARNs": [
                "arn:aws:cognito-idp:us-east-1:388412347424:userpool/us-east-1_d8rcMtMXj"
              ]
            }
          },
          "ApiGatewayDeployment1595495862770": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodSendsnsfeedOptions",
              "ApiGatewayMethodSubscribeOptions",
              "ApiGatewayMethodUnsubscribeOptions",
              "ApiGatewayMethodSendsnsfeedPost",
              "ApiGatewayMethodSubscribePut",
              "ApiGatewayMethodUnsubscribeDelete"
            ]
          },
          "SendSNSFeedLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SendSNSFeedLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SubscribeSNSFeedLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SubscribeSNSFeedLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UnSubscribeSNSFeedLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UnSubscribeSNSFeedLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SNSFeeddevToLambdaSnsSubscriberDLQPolicy": {
            "Type": "AWS::SQS::QueuePolicy",
            "Properties": {
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Id": "SNSFeeddevToLambdaSnsSubscriberDLQPolicy",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "sns.amazonaws.com"
                    },
                    "Action": "sqs:SendMessage",
                    "Resource": {
                      "Fn::GetAtt": [
                        "FeedSNSDLQ",
                        "Arn"
                      ]
                    },
                    "Condition": {
                      "ArnEquals": {
                        "aws:SourceArn": {
                          "Ref": "FeedSNSTopic"
                        }
                      }
                    }
                  }
                ]
              },
              "Queues": [
                {
                  "Ref": "FeedSNSDLQ"
                }
              ]
            }
          },
          "LambdaSnsSubscriberSnsSubscriptionSNSFeeddev": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": {
                "Ref": "FeedSNSTopic"
              },
              "Protocol": "lambda",
              "Endpoint": {
                "Fn::GetAtt": [
                  "LambdaSnsSubscriberLambdaFunction",
                  "Arn"
                ]
              },
              "RedrivePolicy": {
                "deadLetterTargetArn": {
                  "Fn::GetAtt": [
                    "FeedSNSDLQ",
                    "Arn"
                  ]
                }
              }
            }
          },
          "LambdaSnsSubscriberLambdaPermissionSNSFeeddevSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LambdaSnsSubscriberLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": {
                "Ref": "FeedSNSTopic"
              }
            }
          },
          "SendSNSFeedIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "FeedSNSTuto",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/FeedSNSTuto-dev-sendSNSFeed:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sns:Publish"
                        ],
                        "Resource": {
                          "Ref": "FeedSNSTopic"
                        }
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "FeedSNSTuto",
                    "dev",
                    "sendSNSFeed",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "SubscribeSNSFeedIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "FeedSNSTuto",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/FeedSNSTuto-dev-subscribeSNSFeed:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sns:Subscribe"
                        ],
                        "Resource": {
                          "Ref": "FeedSNSTopic"
                        }
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "FeedSNSTuto",
                    "dev",
                    "subscribeSNSFeed",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "UnSubscribeSNSFeedIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "FeedSNSTuto",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/FeedSNSTuto-dev-unSubscribeSNSFeed:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "SNS:UnSubscribe",
                          "SNS:ListSubscriptionsByTopic"
                        ],
                        "Resource": {
                          "Ref": "FeedSNSTopic"
                        }
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "FeedSNSTuto",
                    "dev",
                    "unSubscribeSNSFeed",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "FeedSNSTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "DisplayName": "SNS for feed sent by user",
              "TopicName": "SNSFeed-dev"
            }
          },
          "FeedSNSDLQ": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "SNSFeedDLQ-dev"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "SendSNSFeedLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SendSNSFeedLambdaVersionn5gCFtv7X9kHm3TXcHoES8vvxQrpxPNfFUYwlbZ7oC8"
            }
          },
          "SubscribeSNSFeedLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SubscribeSNSFeedLambdaVersion8KoXP1AuzHNXUfrwW0q09LfmB5VQfLuV4nekgItJY"
            }
          },
          "UnSubscribeSNSFeedLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UnSubscribeSNSFeedLambdaVersiongYYNpqw4OVGUbA67H8GZhAiWLleaDJ0SqpixuL2aQ"
            }
          },
          "LambdaSnsSubscriberLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LambdaSnsSubscriberLambdaVersioncSTg2s8TpuUHrupRyQ2z5GJJbN5yVBbkzajxhMpIY"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-iam-roles-per-function"
    ],
    "pluginsData": {},
    "functions": {
      "sendSNSFeed": {
        "handler": "sendSNSFeed/src/handler.sendSNSMFeed",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SendSNSFeedLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {
          "include": [
            "sendSNSFeed/**"
          ],
          "artifact": "C:\\Mufazzal\\cloud\\UserPortal\\serverless\\lambdas\\SNSTuto\\.serverless\\sendSNSFeed.zip"
        },
        "iamRoleStatementsInherit": true,
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SendSNSFeedIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "events": [
          {
            "http": {
              "path": "sendSNSFeed",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "1_d8rcMtMXj",
                "arn": "arn:aws:cognito-idp:us-east-1:388412347424:userpool/us-east-1_d8rcMtMXj",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "FeedSNSTuto-dev-sendSNSFeed",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "SendSNSFeedLambdaVersionn5gCFtv7X9kHm3TXcHoES8vvxQrpxPNfFUYwlbZ7oC8"
      },
      "subscribeSNSFeed": {
        "handler": "subscribeSNSFeed/src/handler.subscribeSNSFeed",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SubscribeSNSFeedLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {
          "include": [
            "subscribeSNSFeed/**"
          ],
          "artifact": "C:\\Mufazzal\\cloud\\UserPortal\\serverless\\lambdas\\SNSTuto\\.serverless\\subscribeSNSFeed.zip"
        },
        "iamRoleStatementsInherit": true,
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SubscribeSNSFeedIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "events": [
          {
            "http": {
              "path": "subscribe",
              "method": "put",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PUT"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "1_d8rcMtMXj",
                "arn": "arn:aws:cognito-idp:us-east-1:388412347424:userpool/us-east-1_d8rcMtMXj",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "FeedSNSTuto-dev-subscribeSNSFeed",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "SubscribeSNSFeedLambdaVersion8KoXP1AuzHNXUfrwW0q09LfmB5VQfLuV4nekgItJY"
      },
      "unSubscribeSNSFeed": {
        "handler": "unSubscribeSNSFeed/src/handler.unSubscribeSNSFeed",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UnSubscribeSNSFeedLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {
          "include": [
            "unSubscribeSNSFeed/**"
          ],
          "artifact": "C:\\Mufazzal\\cloud\\UserPortal\\serverless\\lambdas\\SNSTuto\\.serverless\\unSubscribeSNSFeed.zip"
        },
        "iamRoleStatementsInherit": true,
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UnSubscribeSNSFeedIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "events": [
          {
            "http": {
              "path": "unSubscribe",
              "method": "delete",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "1_d8rcMtMXj",
                "arn": "arn:aws:cognito-idp:us-east-1:388412347424:userpool/us-east-1_d8rcMtMXj",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "FeedSNSTuto-dev-unSubscribeSNSFeed",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "UnSubscribeSNSFeedLambdaVersiongYYNpqw4OVGUbA67H8GZhAiWLleaDJ0SqpixuL2aQ"
      },
      "lambdaSnsSubscriber": {
        "handler": "lambdaSnsSubscriber/src/handler.lambdaSnsSubscriber",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"LambdaSnsSubscriberLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {
          "include": [
            "lambdaSnsSubscriber/**"
          ],
          "artifact": "C:\\Mufazzal\\cloud\\UserPortal\\serverless\\lambdas\\SNSTuto\\.serverless\\lambdaSnsSubscriber.zip"
        },
        "events": [
          {
            "sns": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SNSFeeddevToLambdaSnsSubscriberDLQPolicy\"][\"Properties\"][\"PolicyDocument\"][\"Statement\"][0][\"Condition\"][\"ArnEquals\"][\"aws:SourceArn\"]"
              },
              "topicName": "SNSFeed-dev",
              "redrivePolicy": {
                "deadLetterTargetRef": "FeedSNSDLQ"
              }
            }
          }
        ],
        "name": "FeedSNSTuto-dev-lambdaSnsSubscriber",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "LambdaSnsSubscriberLambdaVersioncSTg2s8TpuUHrupRyQ2z5GJJbN5yVBbkzajxhMpIY"
      }
    },
    "resources": {
      "Resources": {
        "FeedSNSTopic": {
          "Type": "AWS::SNS::Topic",
          "Properties": {
            "DisplayName": "SNS for feed sent by user",
            "TopicName": "SNSFeed-dev"
          }
        },
        "FeedSNSDLQ": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "SNSFeedDLQ-dev"
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/FeedSNSTuto/dev/1595496239332-2020-07-23T09:23:59.332Z",
    "artifact": ""
  }
}